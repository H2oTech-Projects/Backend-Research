# Generated by Django 5.1.3 on 2024-11-17 03:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Constant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(unique=True)),
                ('value', models.FloatField()),
                ('active_flag', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('note', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rec_date', models.DateTimeField()),
                ('season', models.CharField()),
                ('weekend', models.BooleanField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('holiday', models.BooleanField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('water_year', models.IntegerField()),
                ('j_date', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DelType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_spill', models.CharField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(unique=True)),
                ('full_name', models.CharField()),
                ('address', models.CharField()),
                ('po_box', models.CharField()),
                ('city_state_zip', models.CharField()),
                ('office_phone', models.CharField()),
                ('office_email', models.EmailField(max_length=254)),
                ('office_fax', models.CharField()),
                ('website', models.URLField()),
                ('county', models.CharField()),
                ('country', models.CharField()),
                ('acerage', models.IntegerField(blank=True, null=True)),
                ('established', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='fg_to_vol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fg_id', models.CharField()),
                ('date', models.DateTimeField()),
                ('sum_of_vol_af', models.IntegerField()),
                ('count_of_vol_af', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_id', models.CharField()),
                ('description', models.CharField()),
                ('acres', models.FloatField()),
                ('irrig_acres', models.FloatField()),
                ('standby_acres', models.FloatField()),
                ('parcel_id', models.CharField()),
                ('vol_rate_adj_id', models.IntegerField()),
                ('active_date', models.DateField()),
                ('inactive_date', models.DateField()),
                ('active_flag', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FinalData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField()),
                ('rec_date_time', models.DateTimeField()),
                ('q_cfs', models.FloatField()),
                ('msmt_method', models.CharField()),
                ('user', models.CharField()),
                ('ft_avg_signal_beam1', models.FloatField()),
                ('ft_avg_signal_beam2', models.FloatField()),
                ('ft_avg_noise_beam1', models.FloatField()),
                ('ft_avg_noise_beam2', models.FloatField()),
                ('ft_avg_snr_beam1', models.FloatField()),
                ('ft_avg_snr_beam2', models.FloatField()),
                ('ft_avg_temp_f', models.FloatField()),
                ('ft_avg_batt_voltage_v', models.FloatField()),
                ('ft_avg_vx_fps', models.FloatField()),
                ('ft_stdev_vx_fps', models.FloatField()),
                ('ft_avg_vy_fps', models.FloatField()),
                ('ft_stdev_vy_fps', models.FloatField()),
                ('ft_area_sqft', models.FloatField()),
                ('ft_avg_q_cfs', models.FloatField()),
                ('ft_avg_q_angle_deg', models.FloatField()),
                ('auto_start', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('auto_sample', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('auto_locate', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('gate_full_stem_ft', models.FloatField()),
                ('gate_us_level_ft', models.FloatField()),
                ('gate_ds_level_ft', models.FloatField()),
                ('gate_q_cfs', models.FloatField()),
                ('weir_height_ft', models.FloatField()),
                ('weir_q_cfs', models.FloatField()),
                ('meter_total_af', models.FloatField()),
                ('meter_q_cfs', models.FloatField()),
                ('rt_manual_q_cfs', models.FloatField()),
                ('iq_avg_depth_ft', models.FloatField()),
                ('iq_avg_temp_c', models.FloatField()),
                ('iq_avg_vxc_fps', models.FloatField()),
                ('iq_stdev_vxc_fps', models.FloatField()),
                ('iq_avg_vzc_fps', models.FloatField()),
                ('iq_avg_vxl_fps', models.FloatField()),
                ('iq_stdev_vxl_fps', models.FloatField()),
                ('iq_avg_vxr_fps', models.FloatField()),
                ('iq_stdev_vxr_fps', models.FloatField()),
                ('iq_avg_batt_voltage_v', models.FloatField()),
                ('iq_avg_pitch_deg', models.FloatField()),
                ('iq_avg_roll_deg', models.FloatField()),
                ('iq_avg_in_water', models.FloatField()),
                ('iq_avg_snr_beam1', models.FloatField()),
                ('iq_avg_snr_beam2', models.FloatField()),
                ('iq_avg_snr_beam3', models.FloatField()),
                ('iq_avg_snr_beam4', models.FloatField()),
                ('iq_avg_stage_ft', models.FloatField()),
                ('iq_avg_area_sqft', models.FloatField()),
                ('iq_avg_vx_fps', models.FloatField()),
                ('batch_datetime', models.DateTimeField()),
                ('qc_code', models.CharField()),
                ('row_id', models.IntegerField()),
                ('recompute', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('comments', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='FinalOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField()),
                ('order_date_time', models.DateTimeField()),
                ('rec_date_time', models.DateTimeField()),
                ('user', models.CharField()),
                ('order_q_cfs', models.FloatField()),
                ('current_q_cfs', models.IntegerField()),
                ('delivered_q_cfs', models.IntegerField()),
                ('batch_datetime', models.DateTimeField()),
                ('qc_code', models.CharField()),
                ('row_id', models.IntegerField()),
                ('recompute', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('comments', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Grower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.IntegerField(unique=True)),
                ('grower_name', models.CharField()),
                ('grower_phone', models.CharField()),
                ('grower_email', models.EmailField(max_length=254)),
                ('active_flag', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='LoadData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField()),
                ('date_time', models.DateTimeField()),
                ('q_cfs', models.IntegerField()),
                ('msmt_method', models.CharField()),
                ('user', models.CharField()),
                ('ft_avg_signal_beam1', models.FloatField()),
                ('ft_avg_signal_beam2', models.FloatField()),
                ('ft_avg_noise_beam1', models.FloatField()),
                ('ft_avg_noise_beam2', models.FloatField()),
                ('ft_avg_snr_beam1', models.FloatField()),
                ('ft_avg_snr_beam2', models.FloatField()),
                ('ft_avg_temp_f', models.FloatField()),
                ('ft_avg_batt_voltage_v', models.FloatField()),
                ('ft_avg_vx_fps', models.FloatField()),
                ('ft_stdev_vx_fps', models.FloatField()),
                ('ft_avg_vy_fps', models.FloatField()),
                ('ft_stdev_vy_fps', models.FloatField()),
                ('ft_area_sqft', models.FloatField()),
                ('ft_avg_q_cfs', models.FloatField()),
                ('ft_avg_q_angle_deg', models.FloatField()),
                ('auto_start', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('auto_sample', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('auto_locate', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('gate_full_stem_ft', models.FloatField()),
                ('gate_us_level_ft', models.FloatField()),
                ('gate_ds_level_ft', models.FloatField()),
                ('gate_q_cfs', models.FloatField()),
                ('weir_height_ft', models.FloatField()),
                ('weir_q_cfs', models.FloatField()),
                ('meter_total', models.FloatField()),
                ('meter_q', models.FloatField()),
                ('rt_manual_q_cfs', models.FloatField()),
                ('iq_avg_depth_ft', models.FloatField()),
                ('iq_avg_temp_c', models.FloatField()),
                ('iq_avg_vxc_fps', models.FloatField()),
                ('iq_stdev_vxc_fps', models.FloatField()),
                ('iq_avg_vzc_fps', models.FloatField()),
                ('iq_avg_vxl_fps', models.FloatField()),
                ('iq_stdev_vxl_fps', models.FloatField()),
                ('iq_avg_vxr_fps', models.FloatField()),
                ('iq_stdev_vxr_fps', models.FloatField()),
                ('iq_avg_batt_voltage_v', models.FloatField()),
                ('iq_avg_pitch_deg', models.FloatField()),
                ('iq_avg_roll_deg', models.FloatField()),
                ('iq_avg_in_water', models.FloatField()),
                ('iq_avg_snr_beam1', models.FloatField()),
                ('iq_avg_snr_beam2', models.FloatField()),
                ('iq_avg_snr_beam3', models.FloatField()),
                ('iq_avg_snr_beam4', models.FloatField()),
                ('iq_avg_stage_ft', models.FloatField()),
                ('iq_avg_area_sqft', models.FloatField()),
                ('iq_avg_vx_fps', models.FloatField()),
                ('comments', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='LoadOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField()),
                ('order_date_time', models.DateTimeField()),
                ('rec_date_time', models.DateTimeField()),
                ('user', models.CharField()),
                ('order_q_cfs', models.IntegerField()),
                ('current_q_cfs', models.IntegerField()),
                ('delivered_q_cfs', models.IntegerField()),
                ('comment', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MsmtMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QcCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(unique=True)),
                ('category', models.CharField()),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QCDailyFieldGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField()),
                ('rec_date', models.DateField()),
                ('volume_af', models.FloatField()),
                ('duration_hr', models.FloatField()),
                ('no_rec', models.IntegerField()),
                ('code', models.CharField()),
                ('mode_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='QCDailyTurnout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField()),
                ('rec_date', models.DateField()),
                ('volume_af', models.FloatField()),
                ('duration_hr', models.FloatField()),
                ('no_rec', models.IntegerField()),
                ('code', models.CharField()),
                ('mod_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='RawData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField()),
                ('date_time', models.DateTimeField()),
                ('q_cfs', models.IntegerField()),
                ('msmt_method', models.CharField()),
                ('user', models.CharField()),
                ('ft_avg_signal_beam1', models.FloatField()),
                ('ft_avg_signal_beam2', models.FloatField()),
                ('ft_avg_noise_beam1', models.FloatField()),
                ('ft_avg_noise_beam2', models.FloatField()),
                ('ft_avg_snr_beam1', models.FloatField()),
                ('ft_avg_snr_beam2', models.FloatField()),
                ('ft_avg_temp_f', models.FloatField()),
                ('ft_avg_batt_voltage_v', models.FloatField()),
                ('ft_avg_vx_fps', models.FloatField()),
                ('ft_stdev_vx_fps', models.FloatField()),
                ('ft_avg_vy_fps', models.FloatField()),
                ('ft_stdev_vy_fps', models.FloatField()),
                ('ft_area_sqft', models.FloatField()),
                ('ft_avg_q_cfs', models.FloatField()),
                ('ft_avg_q_angle_deg', models.FloatField()),
                ('auto_start', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('auto_sample', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('auto_locate', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('gate_full_stem_ft', models.FloatField()),
                ('gate_us_level_ft', models.FloatField()),
                ('gate_ds_level_ft', models.FloatField()),
                ('gate_q_cfs', models.FloatField()),
                ('weir_height_ft', models.FloatField()),
                ('weir_q_cfs', models.FloatField()),
                ('meter_total', models.FloatField()),
                ('meter_q', models.FloatField()),
                ('rt_manual_q_cfs', models.FloatField()),
                ('iq_avg_depth_ft', models.FloatField()),
                ('iq_avg_temp_c', models.FloatField()),
                ('iq_avg_vxc_fps', models.FloatField()),
                ('iq_stdev_vxc_fps', models.FloatField()),
                ('iq_avg_vzc_fps', models.FloatField()),
                ('iq_avg_vxl_fps', models.FloatField()),
                ('iq_stdev_vxl_fps', models.FloatField()),
                ('iq_avg_vxr_fps', models.FloatField()),
                ('iq_stdev_vxr_fps', models.FloatField()),
                ('iq_avg_batt_voltage_v', models.FloatField()),
                ('iq_avg_pitch_deg', models.FloatField()),
                ('iq_avg_roll_deg', models.FloatField()),
                ('iq_avg_in_water', models.FloatField()),
                ('iq_avg_snr_beam1', models.FloatField()),
                ('iq_avg_snr_beam2', models.FloatField()),
                ('iq_avg_snr_beam3', models.FloatField()),
                ('iq_avg_snr_beam4', models.FloatField()),
                ('iq_avg_stage_ft', models.FloatField()),
                ('iq_avg_area_sqft', models.FloatField()),
                ('iq_avg_vx_fps', models.FloatField()),
                ('batch_datetime', models.DateTimeField()),
                ('qcd_flag', models.BooleanField(default=False)),
                ('row_id', models.IntegerField()),
                ('qc_code', models.CharField()),
                ('comments', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='RawOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField()),
                ('order_date_time', models.DateTimeField()),
                ('rec_date_time', models.DateTimeField()),
                ('user', models.CharField()),
                ('order_q_cfs', models.FloatField()),
                ('current_q_cfs', models.FloatField()),
                ('delivered_q_cfs', models.FloatField()),
                ('batch_datetime', models.DateTimeField()),
                ('qcd_flag', models.BooleanField(default=False)),
                ('row_id', models.IntegerField()),
                ('comments', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('operator_1', models.CharField()),
                ('operator_2', models.CharField()),
                ('operator_3', models.CharField()),
                ('operator_4', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='Canal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('canal_id', models.CharField(max_length=3, unique=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('carriage_loss', models.FloatField()),
                ('description', models.TextField(blank=True, null=True)),
                ('parent_canal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Research.canal')),
            ],
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qc_fall_start_mn', models.IntegerField()),
                ('qc_fall_start_dy', models.IntegerField()),
                ('qc_spring_start_mn', models.IntegerField()),
                ('qc_spring_start_dy', models.IntegerField()),
                ('allotment_ft', models.FloatField()),
                ('days_to_export', models.IntegerField()),
                ('show_co_mingled_mult', models.BooleanField(default=False)),
                ('co_mingled_mult', models.FloatField()),
                ('use_standBby_flow_duty', models.BooleanField(default=False)),
                ('use_wad', models.BooleanField(default=False)),
                ('use_wad_cost_flow', models.BooleanField(default=False)),
                ('canal_mgmt_return', models.BooleanField(default=False)),
                ('flow_spring_start_mn', models.IntegerField()),
                ('flow_spring_start_dy', models.IntegerField()),
                ('flow_fall_start_mn', models.IntegerField()),
                ('flow_fall_start_dy', models.IntegerField()),
                ('rate_id_spring_flow', models.IntegerField()),
                ('rate_id_fall_flow', models.IntegerField()),
                ('use_wad_owner_flow', models.BooleanField(default=False)),
                ('rate_id_spring_owner_flow', models.IntegerField()),
                ('rate_id_fall_owner_flow', models.IntegerField()),
                ('district', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Research.district')),
            ],
        ),
        migrations.CreateModel(
            name='FieldSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField()),
                ('method', models.CharField(choices=[('Direct', 'Direct'), ('Apportioned', 'Apportioned')], default='Direct', max_length=15)),
                ('active_date', models.DateField()),
                ('inactive_date', models.DateField()),
                ('active_flag', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('comment', models.TextField(max_length=200)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Research.field')),
            ],
        ),
        migrations.CreateModel(
            name='FieldGrower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_id', models.IntegerField(choices=[('1', 'Spring'), ('2', 'fall')], default='1')),
                ('service_year', models.IntegerField()),
                ('field', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Research.field')),
                ('grower', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Research.grower')),
            ],
        ),
        migrations.CreateModel(
            name='GrowerCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_date', models.DateTimeField()),
                ('credit_af', models.IntegerField()),
                ('comment', models.TextField()),
                ('grower', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Research.grower')),
            ],
        ),
        migrations.CreateModel(
            name='QCDailyField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('vol_af', models.FloatField()),
                ('method', models.IntegerField()),
                ('qc_flag', models.CharField()),
                ('field', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Research.field')),
            ],
        ),
        migrations.CreateModel(
            name='QCDailyFieldSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField()),
                ('rec_date', models.DateField()),
                ('method', models.CharField(choices=[('Direct', 'Direct'), ('Apportioned', 'Apportioned')], default='Direct', max_length=15)),
                ('total_vol_af', models.FloatField()),
                ('duration_hr', models.IntegerField()),
                ('no_rec', models.IntegerField()),
                ('total_ac', models.IntegerField()),
                ('field_acres', models.FloatField()),
                ('area_adj_fac', models.FloatField()),
                ('app_vol_af', models.FloatField()),
                ('qc_flag', models.CharField()),
                ('field', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Research.field')),
            ],
        ),
        migrations.CreateModel(
            name='Turnout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turnout_id', models.CharField()),
                ('name', models.CharField()),
                ('type', models.CharField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('site_type_flag', models.CharField()),
                ('sample_time_seconds', models.IntegerField(default='40')),
                ('pipe_dia_ft', models.FloatField()),
                ('rect_full_width_ft', models.IntegerField(default='0')),
                ('rect_full_depth_ft', models.IntegerField(default='0')),
                ('trap_full_tw_ft', models.IntegerField(default='0')),
                ('trap_full_bw_ft', models.IntegerField(default='0')),
                ('trap_full_depth_ft', models.IntegerField(default='0')),
                ('gate_brand', models.CharField(choices=[('Unknown', 'Unknown'), ('Gate Brand', 'Gate Brand')], default='Unknown', max_length=15)),
                ('gate_type', models.CharField(default='circular_circular')),
                ('gate_size_in', models.IntegerField(default='0')),
                ('dead_stem_ft', models.IntegerField(default='0')),
                ('pipe_length_ft', models.IntegerField(default='0')),
                ('pipe_c_factor', models.IntegerField(default='0')),
                ('minorloss_k_factor', models.IntegerField(default='0')),
                ('weir_length_ft', models.IntegerField(default='0')),
                ('weir_crest_type', models.CharField(default='1.5_board')),
                ('index_vel_coeff', models.FloatField(default='0.95')),
                ('index_vel_stage_coeff', models.IntegerField(default='0')),
                ('index_offset', models.IntegerField(default='0')),
                ('instrument_height_in_ft', models.IntegerField(default='0')),
                ('center_beam_x_vel_coeff', models.IntegerField(default='0')),
                ('left_beam_x_vel_coeff', models.IntegerField(default='0')),
                ('right_beam_x_vel_coeff', models.IntegerField(default='0')),
                ('x0', models.IntegerField(default='0')),
                ('x1', models.IntegerField(default='1')),
                ('x2', models.IntegerField(default='1')),
                ('x3', models.IntegerField(default='1')),
                ('x4', models.IntegerField(default='1')),
                ('linked_turnout', models.CharField()),
                ('canal', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='Research.canal')),
                ('del_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Research.deltype')),
                ('route', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Research.route')),
            ],
        ),
        migrations.CreateModel(
            name='QCParam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('us_min', models.FloatField(default='-2')),
                ('us_max', models.FloatField(default='1000')),
                ('ds_min', models.FloatField(default='0')),
                ('ds_max', models.FloatField(default=1000)),
                ('gate_min', models.FloatField(default='0')),
                ('gate_max', models.FloatField(default='1000')),
                ('q_ang_min', models.FloatField(default='-15')),
                ('q_ang_max', models.FloatField(default='15')),
                ('temp_min', models.FloatField(default='33')),
                ('temp_max', models.FloatField(default='120')),
                ('snr1_min', models.IntegerField(default='3')),
                ('snr2_min', models.IntegerField(default='3')),
                ('weir_min', models.IntegerField(default='0')),
                ('weir_max', models.IntegerField(default='3')),
                ('q_min', models.FloatField(default='50')),
                ('q_max', models.FloatField(default='0')),
                ('meter_total_min', models.FloatField(default='0')),
                ('meter_total_max', models.FloatField(default='999999')),
                ('meter_q_min', models.FloatField(default='0')),
                ('meter_q_max', models.FloatField(default='20')),
                ('active_date', models.DateField()),
                ('inactive_date', models.DateField()),
                ('active_flag', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('turnout', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Research.turnout')),
            ],
        ),
        migrations.CreateModel(
            name='MeterInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meter_no', models.IntegerField()),
                ('make', models.CharField()),
                ('model', models.CharField()),
                ('flow_units', models.CharField()),
                ('flow_multiplier', models.FloatField()),
                ('totalizer_units', models.CharField()),
                ('totalizer_reset_value', models.FloatField()),
                ('totalizer_multiplier', models.IntegerField()),
                ('active_date', models.DateField()),
                ('inactive_date', models.DateField()),
                ('active_flag', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('comments', models.TextField()),
                ('turnout', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Research.turnout')),
            ],
        ),
        migrations.CreateModel(
            name='FieldTurnout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_date', models.DateField()),
                ('inactive_date', models.DateField()),
                ('active_flag', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('comment', models.CharField(max_length=200)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Research.field')),
                ('turnout', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Research.turnout')),
            ],
        ),
        migrations.CreateModel(
            name='FieldGroupName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField()),
                ('name', models.CharField(unique=True)),
                ('field_group_no', models.CharField()),
                ('turnout', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='Research.turnout')),
            ],
        ),
    ]
